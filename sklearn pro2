from sklearn import datasets,preprocessing,neighbors
from sklearn.datasets import load_iris
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

iris=load_iris()

x,y=iris.data,iris.target
x_train,x_test,y_train,y_test=train_test_split(x,y,stratify=y,random_state=0,train_size=0.7)

scaler=preprocessing.StandardScaler().fit(x_train)
x_train=scaler.transform(x_train)
x_test=scaler.transform(x_test)


k_range=range(1,15)
for k in k_range:
    knn=neighbors.KNeighborsClassifier(n_neighbors=k)
    knn.fit(x_train,y_train)
    y_pred=knn.predict(x_test)
    
print("prediction of species:", y_pred)

print("accuracy score:",accuracy_score(y_test,y_pred))
print("conclusion matrix:\n",confusion_matrix(y_test,y_pred))
print("classification Report:\n",classification_report(y_test,y_pred))


*****************************************

output

prediction of species: [2 2 0 0 1 0 1 1 0 1 0 2 0 2 1 1 1 1 1 0 1 2 0 1 2 2 2 2 1 2 1 0 0 1 1 1 1
 0 0 1 0 2 0 0 2]
accuracy score: 0.9333333333333333
conclusion matrix:
 [[15  0  0]
 [ 0 15  0]
 [ 0  3 12]]
classification Report:
               precision    recall  f1-score   support

           0       1.00      1.00      1.00        15
           1       0.83      1.00      0.91        15
           2       1.00      0.80      0.89        15

    accuracy                           0.93        45
   macro avg       0.94      0.93      0.93        45
weighted avg       0.94      0.93      0.93        45
